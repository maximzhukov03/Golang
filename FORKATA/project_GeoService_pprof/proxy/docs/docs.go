// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/address/geocode": {
            "post": {
                "description": "get address from geocode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Address from Geocode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get address from geocode",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/address/search": {
            "post": {
                "description": "get address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Address Search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get address",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mycustompath/pprof/allocs": {
            "get": {
                "description": "Профиль выборочных аллокаций памяти (allocs)",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "diagnostics"
                ],
                "summary": "Allocation Samples",
                "responses": {
                    "200": {
                        "description": "pprof allocs binary",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/mycustompath/pprof/block": {
            "get": {
                "description": "Профиль ожиданий блокировок (block profile)",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "diagnostics"
                ],
                "summary": "Block Profile",
                "responses": {
                    "200": {
                        "description": "pprof block binary",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/mycustompath/pprof/cmdline": {
            "get": {
                "description": "cmdline",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "diagnostics"
                ],
                "summary": "Pprof Cmdline",
                "responses": {
                    "200": {
                        "description": "HTML со списком профилей",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mycustompath/pprof/goroutine": {
            "get": {
                "description": "Снимок текущих горутин (goroutine profile)",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "diagnostics"
                ],
                "summary": "Goroutine Snapshot",
                "responses": {
                    "200": {
                        "description": "pprof goroutine binary",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/mycustompath/pprof/heap": {
            "get": {
                "description": "Снимок кучи (heap profile)",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "diagnostics"
                ],
                "summary": "Heap Profile",
                "responses": {
                    "200": {
                        "description": "pprof heap binary",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/mycustompath/pprof/index": {
            "get": {
                "description": "Все доступные pprof-профили",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "diagnostics"
                ],
                "summary": "Pprof Index",
                "responses": {
                    "200": {
                        "description": "HTML со списком профилей",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mycustompath/pprof/mutex": {
            "get": {
                "description": "Профиль ожидания мьютексов (mutex profile)",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "diagnostics"
                ],
                "summary": "Mutex Profile",
                "responses": {
                    "200": {
                        "description": "pprof mutex binary",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/mycustompath/pprof/profile": {
            "get": {
                "description": "Снимает CPU-профиль за заданное количество секунд (параметр seconds)",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "diagnostics"
                ],
                "summary": "CPU-профиль",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Продолжительность профилирования в секундах",
                        "name": "seconds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pprof CPU binary",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/mycustompath/pprof/symbol": {
            "get": {
                "description": "Выполняет преобразование адресов в имена символов (symbol lookup)",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "diagnostics"
                ],
                "summary": "Symbol Lookup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Адрес или символ для поиска",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pprof symbol binary",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/mycustompath/pprof/threadcreate": {
            "get": {
                "description": "Профиль создания системных потоков (threadcreate profile)",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "diagnostics"
                ],
                "summary": "Thread Creation Profile",
                "responses": {
                    "200": {
                        "description": "pprof threadcreate binary",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/mycustompath/pprof/trace": {
            "get": {
                "description": "Снимает трассировку работы рантайма за заданное количество секунд (параметр seconds)",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "diagnostics"
                ],
                "summary": "Runtime Trace",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Длительность трассировки в секундах",
                        "name": "seconds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pprof trace binary",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:1313",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
